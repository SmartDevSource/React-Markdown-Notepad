{"ast":null,"code":"var _jsxFileName = \"/home/gamer/THP/JavaScript/React-Markdown-Notepad/React-Markdown-Notepad/src/components/MarkdownInput/MarkdownInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MarkdownInput = ({\n  updateTitle,\n  updateContent\n}) => {\n  _s();\n  const [inputValue, setInputValue] = useState(\"\");\n  const [textareaValue, setTextareaValue] = useState(\"\");\n  const handleTitleChange = e => {\n    setInputValue(e.target.value);\n    updateTitle(e.target.value);\n  };\n  const handleContentChange = e => {\n    setTextareaValue(e.target.value);\n    updateContent(e.target.value);\n  };\n  const handleClickSave = e => {\n    localStorage.setItem(\"content\", textareaValue);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mdown\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: handleTitleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          id: \"textarea_conten\",\n          type: \"text\",\n          onChange: handleContentChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"save_button\",\n          onClick: handleClickSave,\n          children: \"Sauvegarder\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(MarkdownInput, \"9dGUuwvP9bEEymzRj3lO+XOkJe8=\");\n_c = MarkdownInput;\nexport default MarkdownInput;\nvar _c;\n$RefreshReg$(_c, \"MarkdownInput\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","MarkdownInput","updateTitle","updateContent","_s","inputValue","setInputValue","textareaValue","setTextareaValue","handleTitleChange","e","target","value","handleContentChange","handleClickSave","localStorage","setItem","children","className","type","onChange","fileName","_jsxFileName","lineNumber","columnNumber","id","onClick","_c","$RefreshReg$"],"sources":["/home/gamer/THP/JavaScript/React-Markdown-Notepad/React-Markdown-Notepad/src/components/MarkdownInput/MarkdownInput.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nconst MarkdownInput = ({updateTitle, updateContent}) =>{\n  const [inputValue, setInputValue] = useState(\"\");\n  const [textareaValue, setTextareaValue] = useState(\"\");\n\n  const handleTitleChange = (e)=>{\n    setInputValue(e.target.value);\n    updateTitle(e.target.value);\n  }\n\n  const handleContentChange = (e)=>{\n    setTextareaValue(e.target.value);\n    updateContent(e.target.value);\n  }\n\n  const handleClickSave = (e)=>{\n    localStorage.setItem(\"content\", textareaValue);\n  }\n\n  return (\n    <>\n      <div className=\"mdown\">\n        <input type = \"text\" onChange={handleTitleChange}></input>\n        <p><textarea id = \"textarea_conten\" type = \"text\" onChange={handleContentChange}></textarea></p>\n        <p><button id = \"save_button\" onClick={handleClickSave}>Sauvegarder</button></p>\n      </div>\n    </>\n  )\n}\n\nexport default MarkdownInput;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,aAAa,GAAGA,CAAC;EAACC,WAAW;EAAEC;AAAa,CAAC,KAAI;EAAAC,EAAA;EACrD,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACW,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMa,iBAAiB,GAAIC,CAAC,IAAG;IAC7BJ,aAAa,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAC7BV,WAAW,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMC,mBAAmB,GAAIH,CAAC,IAAG;IAC/BF,gBAAgB,CAACE,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;IAChCT,aAAa,CAACO,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAME,eAAe,GAAIJ,CAAC,IAAG;IAC3BK,YAAY,CAACC,OAAO,CAAC,SAAS,EAAET,aAAa,CAAC;EAChD,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,eACEnB,OAAA;MAAKoB,SAAS,EAAC,OAAO;MAAAD,QAAA,gBACpBnB,OAAA;QAAOqB,IAAI,EAAG,MAAM;QAACC,QAAQ,EAAEX;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC1D1B,OAAA;QAAAmB,QAAA,eAAGnB,OAAA;UAAU2B,EAAE,EAAG,iBAAiB;UAACN,IAAI,EAAG,MAAM;UAACC,QAAQ,EAAEP;QAAoB;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAW;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAChG1B,OAAA;QAAAmB,QAAA,eAAGnB,OAAA;UAAQ2B,EAAE,EAAG,aAAa;UAACC,OAAO,EAAEZ,eAAgB;UAAAG,QAAA,EAAC;QAAW;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7E;EAAC,gBACN,CAAC;AAEP,CAAC;AAAApB,EAAA,CA3BKH,aAAa;AAAA0B,EAAA,GAAb1B,aAAa;AA6BnB,eAAeA,aAAa;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}